<?php

// TODO is probably to soft-code all of this

function ros_get_orderables() {
	return array('resource' => (object)array('name' => t('A River of Stories Educational Resource'), 'price' => '89.00'),
		'hardbook' => (object)array('name' => t('A River of Stories Book - hard cover'), 'price' => '89.00'),
		'softbook' => (object)array('name' => t('A River of Stories Book - soft cover'), 'price' => '89.00'),
		'cards' => (object)array('name' => t('Read and Respond cards - 1 set'), 'price' => '89.00'));
}

// help hook
function ros_purchase_help($path, $arg) {
	
	switch ($path) {
		case 'admin/help#ros_purchase':
		return t('This module implements purchasing for CET River Of Stories');
	}
}


function ros_purchase_permission() {
	return array(
    'ros_purchase' => array(
      'title' => t('River Of Stories Purchase'),
		),
	);
}


// menu hook
function ros_purchase_menu() {
		$items['ros_purchase'] = array(
		 'title' => t('Purchase'),
		 'page callback' => 'ros_purchase_page',
		'access arguments' => array('ros_purchase'),
		 'type' => MENU_NORMAL_ITEM
		);
		
		return $items;
}
	
// page hook - returns the form
function ros_purchase_page() {
	return drupal_get_form('ros_purchase_page_form');
}

// form hook
function ros_purchase_page_form() {

	$form['header'] = array(
		'#type' => 'item',
		'#title' => t('Purchase the resource'),
		'#markup' => t('You can purchase several Educational Resources but only one login id will be provided.'
			. 'On confirmation of your order, the login details will be sent to the Administrator email address. '
			. 'Currently this Educational Resource is only available for New Zealand. Access to the secure area of this site is only '
			. 'granted to those purchasing the full Educational Resource and not to individual item purchases.'
 			. '<br/>'
			. 'For any queries or requests for other items in the Educational Resource please call Customer Services on '
			. '0800 800 565 (8am - 5pm weekdays)'),
	);

	$form['order'] = array(
		'#type' => 'fieldset',
		'#title' => 'Your order',
	);
	
	// Build the order form with ajaxy stuff
	

	$ros_orderables = ros_get_orderables();
	foreach ($ros_orderables as $type => $item) {
		$form['order'][$type . '_count'] = array(
			'#type' => 'textfield',
			'#size' => 2,
			'#default_value' => 0,
			'#ajax' => array('callback' => 'ros_purchase_updated_count'));

		$form['order'][$type . '_price'] = array(
			'#type' => 'textfield',
			'#title' => $item->name . ' (NZD)',
			'#size' => 6,
			'#default_value' => '$' . $item->price,
			'#disabled' => TRUE
		);
	}
	
	$form['order']['freight_price'] = array(
	'#type' => 'textfield',
				'#title' => 'Freight (NZD)',
				'#size' => 6,
				'#default_value' => '$7.50',
				'#disabled' => TRUE
	);

	$form['order']['gst_amount'] = array(
		'#type' => 'item',
		'#title' => 'Tax amount (GST 15.0%)',
		'#markup' => '<div id="gst-amount" />'
	);
	
	$form['order']['total_amount'] = array(
			'#type' => 'item',
			'#title' => 'Total NZD (incl. shipping)',
			'#markup' => '<div id="total-amount" />'
	);
	
	
	// Collect the order deets
	
	// Collect the login deets
	
	
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);
	
	return $form;
}

function ros_purchase_updated_count($form, $form_state) {
	// Work out the total
	$ros_orderables = ros_get_orderables();
	$net_total = 0;
	foreach ($form_state['input'] as $fieldname => $fieldcount) {
		$countpos = strrpos( $fieldname, '_count'); 
		if ( $countpos  == strlen($fieldname) - 6) {
			// ends with _count
			$itemname = substr($fieldname, 0, $countpos);
			
			$net_total += $fieldcount * $ros_orderables[$itemname]->price;
		}
	}
	
	$net_total += 7.5;		// TODO softcode the freight
	$gst = $net_total * 0.15;		// TODO softcode me
	$total_amount = $net_total + $gst;
	
	$commands = array();
	$commands[] = ajax_command_replace('#gst-amount', '<div id="gst-amount">$' . money_format('%i', $gst) . '</div>');
	$commands[] = ajax_command_replace('#total-amount', '<div id="total-amount">$' . money_format('%i', $total_amount) . '</div>');
	
	return array('#type' => 'ajax', '#commands' => $commands);
}

// form submit hook
// This runs bulk ingest in a batch with a progress bar and stuff
//
function ros_purchase_page_form_submit($form_id, $form_values) {

	debug('Submit purchase: ' . print_r($form_values, true));
}
